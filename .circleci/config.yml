---

version: 2.1

jobs:
  sonarscan:
    docker:
      - image: dotnet-sonar:22.07.3
    steps:
      - checkout
      - run:
          name: "Replace Sonarqube project version"
          command: |
            ls
            if [ ! -z "${VERSION}" ]
            then
                sed -i -e "s/<VERSION>/${VERSION}/" ./sonar-project.properties
            else
                sed -i -e "s/<VERSION>/UNKNOWN/" ./sonar-project.properties
            fi
            cat ./sonar-project.properties
      - run:
          command: mkdir -p /tmp/cache/scanner
          name: Create cache dir
      - run:
          name: SonarCloud
          command: >

            VERSION=4.7.0.2747

            SCANNER_DIRECTORY=/tmp/cache/scanner

            $Env:SONAR_USER_HOME = $SCANNER_DIRECTORY/.sonar
            $Env:SONAR_LOGIN = $Env:SONAR_TOKEN

            dotnet /sonar-scanner/SonarScanner.MSBuild.dll begin /k:worldboxpp /d:sonar.sources=/tmp/project /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$Env:SONAR_TOKEN
            dotnet /sonar-scanner/SonarScanner.MSBuild.dll end  /d:sonar.login="$Env:SONAR_TOKEN"
  deploy:
    environment:
      RC_VERSION: 1
    docker:
      # Primary container image where all steps run
      - image: alpine
    steps:
      - checkout
      - run:
          name: State and list
          command: |
            echo 'Creating .mod file'
            ls
      - run:
          name: Version number
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}/" mod.json
            elif [ "$CIRCLE_BRANCH" = "staging" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}RC${RC_VERSION}/" mod.json
            elif [ ! -z "$CIRCLE_PULL_REQUEST" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}RC${RC_VERSION}PR${CIRCLE_PULL_REQUEST##*/}/" mod.json
            else
                sed -i -e "4 s/<VERSION>/COM-${CIRCLE_SHA1}/" mod.json
            fi
      - run:
          name: Change structure
          command: |
            mkdir ./deploy
            echo 'Copying mod.json'
            cp mod.json ./deploy/mod.json
            echo 'Copying GameResources'
            cp -R ./GameResources ./deploy/GameResources
            echo 'Copying Embedded Resources'
            cp -R ./EmbeddedResources ./deploy/EmbeddedResources
            mkdir ./deploy/Code
            find ./Code -iname '*.cs' -exec sh -c 'echo "Copying" $1 && cp {} ./deploy/Code' - {} \;
      - run:
          name: Package files
          command: |
            apk add zip
            echo "Creating mod file"
            mkdir /artifacts
            cd deploy
            zip -r '/artifacts/Worldbox++.mod' .
      - store_artifacts:
          path: /artifacts
orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3
workflows:
  Build and deploy:
    jobs:
      - sonarscan:
          context: SonarCloud
      - deploy:
          requires:
            - sonarscan
