---

version: 2.1
orbs:
  windows: circleci/windows@4.1.1
jobs:
  sonarscan:
    executor:
      name: windows/default
    steps:
      - checkout
      - run:
          name: "Replace Sonarqube project version"
          command: |
            (Get-Content sonar-project.properties) -replace '<VERSION>', $Env:VERSION | Out-File -encoding ASCII sonar-project.properties
            Get-Content ./sonar-project.properties
      - run:
          name: "Install Java"
          command: |
            Invoke-WebRequest -Uri https://download.oracle.com/java/18/latest/jdk-18_windows-x64_bin.exe -outfile jdk-18_windows-x64_bin.exe
            Write-Output "Installing Java"
            Start-Process 'jdk-18_windows-x64_bin.exe' /s
            Write-Output "Java installed."
            Remove-Item jdk-18_windows-x64_bin.exe
      - run:
          name: "Install SonarScanner for .NET"
          command: |
            dotnet tool install --global dotnet-sonarscanner
      - run:
          name: sonar-begin
          command: |
            URL="https://sonarcloud.io"
            dotnet sonarscanner begin /k:"worldboxpp" /d:sonar.host.url=$URL /d:sonar.login="${SONAR_TOKEN}" \
            /d:sonar.sources="/tmp/project" \
            /d:sonar.verbose=true \
            /o:"apolo49"
      - run:
          name: build-dll
          command: |
            dotnet build .
      - run:
          name: sonar-end
          command: |
            dotnet sonarscanner end /d:sonar.login=$Env:SONAR_TOKEN

  deploy:
    environment:
      RC_VERSION: 1
    docker:
      # Primary container image where all steps run
      - image: alpine
    steps:
      - checkout
      - run:
          name: State and list
          command: |
            echo 'Creating .mod file'
            ls
      - run:
          name: Version number
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}/" mod.json
            elif [ "$CIRCLE_BRANCH" = "staging" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}RC${RC_VERSION}/" mod.json
            elif [ ! -z "$CIRCLE_PULL_REQUEST" ]
            then
                sed -i -e "4 s/<VERSION>/${VERSION}RC${RC_VERSION}PR${CIRCLE_PULL_REQUEST##*/}/" mod.json
            else
                sed -i -e "4 s/<VERSION>/COM-${CIRCLE_SHA1}/" mod.json
            fi
      - run:
          name: Change structure
          command: |
            mkdir ./deploy
            echo 'Copying mod.json'
            cp mod.json ./deploy/mod.json
            echo 'Copying GameResources'
            cp -R ./GameResources ./deploy/GameResources
            echo 'Copying Embedded Resources'
            cp -R ./EmbeddedResources ./deploy/EmbeddedResources
            mkdir ./deploy/Code
            find ./Code -iname '*.cs' -exec sh -c 'echo "Copying" $1 && cp {} ./deploy/Code' - {} \;
      - run:
          name: Package files
          command: |
            apk add zip
            echo "Creating mod file"
            mkdir /artifacts
            cd deploy
            zip -r '/artifacts/Worldbox++.mod' .
      - store_artifacts:
          path: /artifacts
workflows:
  Build and deploy:
    jobs:
      - sonarscan:
          context: SonarCloud
      - deploy:
          requires:
            - sonarscan
